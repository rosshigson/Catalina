#!/bin/bash
#set -x

TMP_LCCDIR="$LCCDIR"
if [[ "$TMP_LCCDIR" == "" ]] ; then
   TMP_LCCDIR=/opt/catalina
fi

if [[ ! -e "$TMP_LCCDIR/bin/catalina_env" ]] ; then
   clear
   echo ""
   echo "ERROR: Catalina does not appear to be installed in $TMP_LCCDIR"
   echo "";
   echo "  Set the environment variable LCCDIR to where Catalina is installed.";
   echo "";
   exit
fi

if [[ "$1" != "" ]]; then
   TMP_PARAMS=`echo $1 $2 $3 $4 $5 $6 $7 $8 $9`
   if [[ "$CATALINA_DEFINE" != "" ]]; then
      if [[ "$CATALINA_DEFINE" != "$TMP_PARAMS" ]]; then

         echo ""
         echo "ERROR: Command line options conflict with CATALINA_DEFINE"
         echo ""
         echo "   CATALINA_DEFINE is set to $CATALINA_DEFINE"
         echo "   Command line options were $TMP_PARAMS"
         echo ""
         echo "   Either set CATALINA_DEFINE to null using the following command:"
         echo ""
         echo "      unset CATALINA_DEFINE"
         echo ""
         echo "   or do not specify any command line parameters"
         echo ""
	 exit

      else

         echo ""
         echo "NOTE: Environment variable CATALINA_DEFINE is set to $CATALINA_DEFINE"
         echo ""
         echo "  The library will be built using these options. If these conflict" 
         echo "  with options specified in this file, the results may be unexpected." 
         
      fi

   else

      echo ""
      echo "NOTE: The library will be built with options $TMP_PARAMS"
      echo ""
      echo "  If these options conflict with options specified in the Makefile,"
      echo "  the results may be unexpected."
      CATALINA_DEFINE=$TMP_PARAMS; export CATALINA_DEFINE

   fi

else

   if [[ "$CATALINA_DEFINE" != "" ]]; then

      echo ""
      echo "NOTE: Environment variable CATALINA_DEFINE is set to $CATALINA_DEFINE"
      echo ""
      echo "  The library will be built using these options. If these conflict" 
      echo "  with options specified in this file, the results may be unexpected." 
  
   else     

      echo ""
      echo "NOTE: Environment variable CATALINA_DEFINE is not set"
      echo ""

   fi

fi

echo ""
echo "cleaning output directories ..."

./clean_all
mkdir lib/p2
mkdir lib/p2/cmm
mkdir lib/p2/lmm
mkdir lib/p2/nmm
mkdir lib/p2/xmm

TMP_LIBPATH=`pwd`

echo ""
echo "copying library source tree ..."

cp -R $LCCDIR/source/lib source/
cp -R $LCCDIR/target/p2 target/

echo ""
echo "cleaning library source tree ..."

cd source
./clean_all
cd ..

echo ""
echo "building library for Catalina ..."
# save CATALINA_DEFINE before building library
TMP_DEFINE_3=$CATALINA_DEFINE

if [ "$2" == "PSRAM" ] || [ "$1" == "P2_EDGE" ]; then

   TMP_PSRAM=psram
   cd source/lib
   ./build_psram >result.txt 2>&1
   cd ../..

elif [ "$2" == "HYPER" ] || [ "$1" == "P2_EVAL" ]; then

   TMP_PSRAM=hyper
   cd source/lib
   ./build_hyper >result.txt 2>&1
   cd ../..

else

   echo "ERROR: Only P2_EDGE or P2_EVAL are supported"
   exit

fi

# restore CATALINA_DEFINE after building library
CATALINA_DEFINE="$TMP_DEFINE_3"

echo ""

